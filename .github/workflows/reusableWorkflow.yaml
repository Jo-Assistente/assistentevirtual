name: Reusable CICD Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ${{ inputs.environment == 'Production' && 'self-hosted' }}
    if: ${{ inputs.environment == 'Production' }}
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.environment }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Create env file
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker Image for Frontend
        run: docker build --build-arg REACT_APP_API_URL=${{ vars.REACT_APP_API_URL }} -t aceleraprojetosfjs/assistentevirtual-frontend:${{ inputs.environment }} ./frontend

      - name: Build Docker Image for Backend
        run: docker build -t aceleraprojetosfjs/assistentevirtual-backend:${{ inputs.environment }} ./backend

      - name: Push Docker Image for Frontend
        run: docker push aceleraprojetosfjs/assistentevirtual-frontend:${{ inputs.environment }}

      - name: Push Docker Image for Backend
        run: docker push aceleraprojetosfjs/assistentevirtual-backend:${{ inputs.environment }}

  deploy:
    name: Deploy to ${{ inputs.environment }}
    needs: build-and-push
    runs-on: ${{ inputs.environment == 'Production' && 'self-hosted' }}
    if: ${{ inputs.environment == 'Production' }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Re-create .env file
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Pull Docker Images
        run: |
          docker pull aceleraprojetosfjs/assistentevirtual-frontend:${{ inputs.environment }}
          docker pull aceleraprojetosfjs/assistentevirtual-backend:${{ inputs.environment }}

      - name: Deploy using Docker Compose
        run: |
          docker-compose down
          REACT_APP_API_URL=${{ vars.REACT_APP_API_URL }} docker-compose up --build -d
