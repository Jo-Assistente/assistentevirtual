name: AWS CI-CD Workflow

on:
  push:
    branches:
      - mvp-aws
  pull_request:
    branches:
      - mvp-aws

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/frontend-jo'
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Building Docker Image for Frontend
        run: docker build -t aceleraprojetosfjs/assistentevirtual-frontend:latest ./frontend

      - name: Pushing Docker Image for Frontend
        run: docker push aceleraprojetosfjs/assistentevirtual-frontend:latest

  deploy-frontend:
    needs: build-and-push-frontend
    runs-on: self-hosted
    if: github.ref == 'refs/heads/frontend-jo'
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Pull Docker Image for Frontend
        run: docker pull aceleraprojetosfjs/assistentevirtual-frontend:latest

      - name: Stop and Remove Old Frontend Container
        run: docker rm -f frontend-container 

      - name: Deploy Docker Container for Frontend
        run: docker run -d --name frontend-container -p 3001:80 aceleraprojetosfjs/assistentevirtual-frontend:latest

  build-and-push-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/backend-mvp'
    env:
      ECR_BACKEND_IMAGE: ${{ vars.ECR_BACKEND_IMAGE }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
      ECS_BACKEND_SERVICE: ${{ vars.ECS_BACKEND_SERVICE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker for x86
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/x86_64

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com

      - name: Build and push Docker image
        run: |
          cd backend
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build --platform linux/x86_64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_BACKEND_IMAGE:latest --push .

  deploy-backend:
    needs: build-and-push-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/backend-mvp'
    steps:
      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_BACKEND_SERVICE }} --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-2"
