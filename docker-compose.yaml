
services:
  backend:
    container_name: backend_c
    image: aceleraprojetosfjs/assistentevirtual-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/documents:/app/documents
      - ./backend/logs:/app/logs  
    environment:
      - NODE_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - jo-db
    networks:
      - app-network
      

  frontend:
    container_name: frontend_c
    image: aceleraprojetosfjs/assistentevirtual-frontend:latest
    build:
      context: ./frontend 
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    env_file:
      - ./.env
    volumes:
      - ./frontend/.env:/usr/share/nginx/html/.env
    networks:
      - app-network


  jo-db:
    hostname: jo-db
    image: ankane/pgvector
    ports:
      - "5433:5433"
    restart: always
    environment:
      - POSTGRES_DB=jo-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234!
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  db_data:
    driver: local

networks:
  app-network:
    driver: bridge