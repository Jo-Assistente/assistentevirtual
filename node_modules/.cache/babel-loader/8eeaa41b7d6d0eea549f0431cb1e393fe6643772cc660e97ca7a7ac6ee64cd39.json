{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cunha\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\jofjs\\\\assistentevirtual\\\\frontend\\\\src\\\\components\\\\Chatbot\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ChatForm from '../Form/index.tsx';\nimport { sendMessage } from '../App/apiFunctions.ts';\nimport './chatbot.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [chatLog, setChatLog] = useState([]);\n  const handleSubmit = async userMessage => {\n    const botResponse = await sendMessage(userMessage);\n    setChatLog(prevChatLog => [...prevChatLog, {\n      type: 'user',\n      message: userMessage,\n      profilePic: '../../assets/user.svg'\n    }, {\n      type: 'bot',\n      message: botResponse.text,\n      profilePic: '../../assets/logo.svg'\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assistente Virtual FJS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        id: \"chat-log\",\n        children: chatLog.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile-pic\",\n            src: entry.profilePic,\n            alt: entry.type === 'user' ? 'Foto do Usuário' : 'Foto do Bot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${entry.type}-message message-content`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: entry.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatForm, {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"RI9RDyFVl2GmHjK6JLjsXVZN9lQ=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["useState","ChatForm","sendMessage","React","Chatbot","chatLog","setChatLog","handleSubmit","userMessage","botResponse","prevChatLog","type","message","profilePic","text","map","entry","index"],"sources":["C:/Users/cunha/OneDrive/Área de Trabalho/jofjs/assistentevirtual/frontend/src/components/Chatbot/index.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport ChatForm from '../Form/index.tsx';\r\nimport { sendMessage } from '../App/apiFunctions.ts';\r\n\r\nimport './chatbot.css';\r\nimport React from 'react';\r\n\r\nconst Chatbot = () => {\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const handleSubmit = async (userMessage: string) => {\r\n    const botResponse = await sendMessage(userMessage);\r\n\r\n    setChatLog((prevChatLog) => [\r\n      ...prevChatLog,\r\n      { type: 'user', message: userMessage, profilePic: '../../assets/user.svg' },\r\n      { type: 'bot', message: botResponse.text, profilePic: '../../assets/logo.svg' },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <h1>Assistente Virtual FJS</h1>\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-log\" id=\"chat-log\">\r\n          {chatLog.map((entry, index) => (\r\n            <div key={index} className=\"message-container\">\r\n              <img\r\n                className=\"profile-pic\"\r\n                src={entry.profilePic}\r\n                alt={entry.type === 'user' ? 'Foto do Usuário' : 'Foto do Bot'}\r\n              />\r\n              <div className={`${entry.type}-message message-content`}>\r\n                <p>{entry.message}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <ChatForm onSubmit={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,YAAY,GAAG,MAAOC,WAAmB,IAAK;IAClD,MAAMC,WAAW,GAAG,MAAMP,WAAW,CAACM,WAAW,CAAC;IAElDF,UAAU,CAAEI,WAAW,IAAK,CAC1B,GAAGA,WAAW,EACd;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEJ,WAAW;MAAEK,UAAU,EAAE;IAAwB,CAAC,EAC3E;MAAEF,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAEH,WAAW,CAACK,IAAI;MAAED,UAAU,EAAE;IAAwB,CAAC,CAChF,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAA,UAAI;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB;QAAK,SAAS,EAAC,UAAU;QAAC,EAAE,EAAC,UAAU;QAAA,UACpCR,OAAO,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxB;UAAiB,SAAS,EAAC,mBAAmB;UAAA,wBAC5C;YACE,SAAS,EAAC,aAAa;YACvB,GAAG,EAAED,KAAK,CAACH,UAAW;YACtB,GAAG,EAAEG,KAAK,CAACL,IAAI,KAAK,MAAM,GAAG,iBAAiB,GAAG;UAAc;YAAA;YAAA;YAAA;UAAA,QAC/D,eACF;YAAK,SAAS,EAAG,GAAEK,KAAK,CAACL,IAAK,0BAA0B;YAAA,uBACtD;cAAA,UAAIK,KAAK,CAACJ;YAAO;cAAA;cAAA;cAAA;YAAA;UAAK;YAAA;YAAA;YAAA;UAAA,QAClB;QAAA,GAREK,KAAK;UAAA;UAAA;UAAA;QAAA,QAUhB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACN,QAAC,QAAQ;QAAC,QAAQ,EAAEV;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAnCIH,OAAO;AAAA,KAAPA,OAAO;AAqCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}